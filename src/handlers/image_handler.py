from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from src.openapi_client import OpenAiClient

openai_client = OpenAiClient()

async def image_interface(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['mode'] = 'image'
    keyboard = [[InlineKeyboardButton("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", callback_data='start')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    target = update.message if update.message else update.callback_query.message
    await target.reply_text("üñº –ù–∞–¥—ñ—à–ª—ñ—Ç—å –æ–ø–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:", reply_markup=reply_markup)

async def handle_image_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.user_data.get('mode') != 'image':
        return
    user_text = update.message.text
    try:
        gpt_response = await openai_client.ask(f"–°—Ç–≤–æ—Ä–∏ –æ–ø–∏—Å –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {user_text}", "")
        await update.message.reply_text(f"–û—Å—å –≤–∞—à –æ–ø–∏—Å: {gpt_response}")
    except Exception:
        await update.message.reply_text("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
