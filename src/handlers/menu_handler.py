import logging
from telegram import Update
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)


async def menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()

    choice = query.data
    logger.info(f"User selected: {choice}")

    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∂–∏–º
    context.user_data['mode'] = choice

    # –í –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –≤–∏–±–æ—Ä—É
    if choice == "random":
        await query.message.reply_text("üß† –ì–µ–Ω–µ—Ä—É—é –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ–∞–∫—Ç...")
    elif choice == "gpt":
        await query.message.reply_text("ü§ñ –ù–∞–ø–∏—à–∏ —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è –¥–ª—è GPT:")
    elif choice == "talk":
        await query.message.reply_text("üë§ –û–±–µ—Ä–∏ –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å –∞–±–æ –ø–∏—à–∏ –ø—Ä—è–º–æ:")
    elif choice == "quiz":
        await query.message.reply_text("‚ùì –ü–æ—á–Ω–µ–º–æ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É! –í–≤–µ–¥–∏ /quiz")
    elif choice == "recommend":
        await query.message.reply_text("üé¨üìöüéµ –û–±–µ—Ä–∏: —Ñ—ñ–ª—å–º, –∫–Ω–∏–≥—É —á–∏ –º—É–∑–∏–∫—É")
    elif choice == "translate":
        await query.message.reply_text("üåç –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É:")
    else:
        await query.message.reply_text("‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∏–π –≤–∏–±—ñ—Ä")
